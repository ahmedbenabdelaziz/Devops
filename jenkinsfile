pipeline {
    agent any

    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    environment {
        FRONTEND_DIR = 'devopsfrnt'
        BACKEND_DIR = 'mon-projet-node'
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    extensions: [],
                    userRemoteConfigs: [[
                        url: 'https://github.com/ahmedbenabdelaziz/Devops.git',
                        credentialsId: 'a5382a2d-2dd5-4796-8165-30a4117ac67d'
                    ]]
                ])
            }
        }

        stage('Build Backend') {
            steps {
                dir(env.BACKEND_DIR) {
                    bat '''
                        @echo off
                        echo Installation des dépendances Node.js...
                        npm install
                        echo Construction du backend...
                        npm run build
                    '''
                }
            }
        }

        stage('Test Backend') {
            steps {
                dir(env.BACKEND_DIR) {
                    bat 'npm test'
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir(env.FRONTEND_DIR) {
                    bat '''
                        @echo off
                        echo Installation des dépendances Frontend...
                        npm install
                        echo Construction du frontend...
                        npm run build
                    '''
                }
            }
        }

        stage('Déploiement') {
            when {
                branch 'main'
            }
            steps {
                bat '''
                    echo Déploiement en production...
                    REM Ajouter ici vos commandes de déploiement
                '''
            }
        }
    }

    post {
        success {
            mail to: 'email@example.com',
                 subject: "Build Réussi - ${currentBuild.fullDisplayName}",
                 body: "Le build ${env.BUILD_URL} a réussi"
        }
        failure {
            mail to: 'email@example.com',
                 subject: "Build Échoué - ${currentBuild.fullDisplayName}",
                 body: "Le build ${env.BUILD_URL} a échoué"
        }
    }
}