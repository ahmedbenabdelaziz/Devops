pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-creds')
        FRONTEND_IMAGE = "ahmedabdelaziz5357580/backend-app"
        BACKEND_IMAGE = "ahmedabdelaziz5357580/backend-app"
        REMOTE_SERVER = "user@serveur-distant"
    }

    stages {
        // Étape 1: Récupération du code source
        stage('Checkout') {
            steps {
                git branch: 'main', 
                url: 'https://github.com/votre-compte/votre-repo.git'
            }
        }

        // Étape 2: Construction et publication du Frontend
        stage('Build Frontend') {
            steps {
                dir('devopsfrnt') {
                    sh "docker build -t ${FRONTEND_IMAGE} ."
                    sh "echo ${DOCKERHUB_CREDENTIALS_PSW} | docker login -u ${DOCKERHUB_CREDENTIALS_USR} --password-stdin"
                    sh "docker push ${FRONTEND_IMAGE}"
                }
            }
        }

        // Étape 3: Construction et publication du Backend
        stage('Build Backend') {
            steps {
                dir('back') {
                    sh "docker build -t ${BACKEND_IMAGE} ."
                    sh "echo ${DOCKERHUB_CREDENTIALS_PSW} | docker login -u ${DOCKERHUB_CREDENTIALS_USR} --password-stdin"
                    sh "docker push ${BACKEND_IMAGE}"
                }
            }
        }

        // Étape 4: Déploiement sur le serveur distant
        stage('Deploy') {
            steps {
                sshagent(['ssh-key']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ${REMOTE_SERVER} \
                        "docker pull ${FRONTEND_IMAGE} && 
                         docker pull ${BACKEND_IMAGE} &&
                         docker-compose -f /chemin/vers/docker-compose.yml down &&
                         docker-compose -f /chemin/vers/docker-compose.yml up -d"
                    """
                }
            }
        }
    }
}
